FROM ubuntu:22.10
#ARG DEBIAN_FRONTEND=noninteractive
ENV TZ=Europe/Tallinn
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN sed -i.bak "/^#.*deb-src.*universe$/s/^# //g" /etc/apt/sources.list
RUN apt-get update -y
RUN apt build-dep r-base -y
RUN apt-get install libcurl4-gnutls-dev libxml2-dev libssl-dev libzmq3-dev -y
RUN apt-get install build-essential -y
RUN apt-get install wget -y
RUN apt-get install pigz -y
RUN apt-get install git -y
RUN apt-get install curl -y
RUN apt-get install gfortran -y
RUN apt-get install libreadline-dev -y
RUN wget https://cran.r-project.org/src/base/R-4/R-4.3.1.tar.gz -O /tmp/R-4.3.1.tar.gz && \
    tar zxvf /tmp/R-4.3.1.tar.gz -C /usr/bin/ && rm /tmp/R-4.3.1.tar.gz && cd /usr/bin/R-4.3.1 && ./configure --prefix=/usr/bin/R-4.3.1 --enable-R-shlib --enable-memory-profiling --with-blas --with-lapack && \
    make && make install
RUN apt-get install r-base -y
RUN apt-get install r-recommended -y
RUN apt-get install python3-pip -y
RUN python3 -m pip install biopython
RUN curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
RUN python3 get-pip.py
RUN python3 -m pip install cutadapt==4.4
RUN wget https://github.com/marbl/Krona/releases/download/v2.8.1/KronaTools-2.8.1.tar -O /tmp/KronaTools-2.8.1.tar && \
    tar xvf /tmp/KronaTools-2.8.1.tar -C /usr/bin/ && rm /tmp/KronaTools-2.8.1.tar && cd /usr/bin/KronaTools-2.8.1 && ./install.pl
RUN wget https://github.com/shenwei356/seqkit/releases/download/v2.3.0/seqkit_linux_amd64.tar.gz -O /tmp/seqkit.tar.gz && \
    tar zxvf /tmp/seqkit.tar.gz -C /usr/bin/ && rm /tmp/seqkit.tar.gz
RUN apt-get install autoconf -y
RUN git clone --branch v2.22.1 https://github.com/torognes/vsearch.git \
    && cd vsearch && ./autogen.sh && ./configure && make && make install
RUN Rscript -e 'install.packages("curl", repos="https://cloud.r-project.org")'
RUN Rscript -e 'install.packages("clustermq", repos = "https://cloud.r-project.org/" )'
RUN Rscript -e 'install.packages("dplyr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("fst", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("ggplot2", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("knitr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("magrittr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("markdown", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("purrr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("qs", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("readr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("readxl", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("rmarkdown", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("R.utils", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("stringi", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("stringr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("tarchetypes", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("targets", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("tibble", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("tidyr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("tinytex", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("withr", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("Matrix", repos = "https://cloud.r-project.org/")'
RUN Rscript -e 'install.packages("BiocManager")'
RUN Rscript -e 'BiocManager::install(version = "3.17")'
RUN Rscript -e 'BiocManager::install("dada2")'
RUN wget https://microbiology.se/sw/ITSx_1.1.3.tar.gz -O /tmp/ITSx_1.1.3.tar.gz
RUN tar zxvf /tmp/ITSx_1.1.3.tar.gz -C /usr/bin/ && rm /tmp/ITSx_1.1.3.tar.gz
RUN wget http://eddylab.org/software/hmmer/hmmer-3.3.2.tar.gz -O /tmp/hmmer-3.3.2.tar.gz
RUN tar zxvf /tmp/hmmer-3.3.2.tar.gz -C /usr/bin/ && rm /tmp/hmmer-3.3.2.tar.gz
RUN cp /usr/bin/ITSx_1.1.3/ITSx /usr/bin
RUN cp  -R /usr/bin/ITSx_1.1.3/ITSx_db /usr/bin
RUN cd /usr/bin/hmmer-3.3.2 && ./configure && make && make install
RUN wget https://github.com/mothur/mothur/releases/download/v1.48.0/Mothur.Ubuntu_20.zip -O /tmp/mothur.zip
RUN unzip /tmp/mothur.zip -d /usr/bin/ && rm /tmp/mothur.zip
ENV PATH "$PATH:/usr/bin/mothur"